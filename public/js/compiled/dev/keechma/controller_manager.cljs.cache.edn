{:rename-macros {}, :renames {}, :externs {Object {}}, :use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name keechma.controller-manager, :imports nil, :requires {cljs.core.async cljs.core.async, keechma.util keechma.util, controller keechma.controller, keechma.controller keechma.controller}, :uses {timeout cljs.core.async, dissoc-in keechma.util, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, >! cljs.core.async, alts! cljs.core.async, put! cljs.core.async, SerializedController keechma.controller}, :defs {apply-stop-controllers {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :line 39, :column 7, :end-line 39, :end-column 29, :arglists (quote ([app-db reporter stop]))}, :name keechma.controller-manager/apply-stop-controllers, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :end-column 29, :method-params ([app-db reporter stop]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 3, :fn-var true, :arglists (quote ([app-db reporter stop]))}, send-command-to {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :line 7, :column 17, :end-line 7, :end-column 32, :private true, :arglists (quote ([reporter controller command-name args]))}, :private true, :name keechma.controller-manager/send-command-to, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :end-column 32, :method-params ([reporter controller command-name args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 4, :fn-var true, :arglists (quote ([reporter controller command-name args]))}, apply-wake-controllers {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :line 72, :column 7, :end-line 72, :end-column 29, :arglists (quote ([app-db reporter controllers commands-chan get-running wake]))}, :name keechma.controller-manager/apply-wake-controllers, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :end-column 29, :method-params ([app-db reporter controllers commands-chan get-running wake]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 6, :fn-var true, :arglists (quote ([app-db reporter controllers commands-chan get-running wake]))}, apply-route-change {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :line 102, :column 7, :end-line 102, :end-column 25, :arglists (quote ([reporter route-params app-db-atom commands-chan controllers]))}, :name keechma.controller-manager/apply-route-change, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :end-column 25, :method-params ([reporter route-params app-db-atom commands-chan controllers]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 5, :fn-var true, :arglists (quote ([reporter route-params app-db-atom commands-chan controllers]))}, apply-start-controllers {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :line 53, :column 7, :end-line 53, :end-column 30, :arglists (quote ([app-db reporter controllers commands-chan get-running start]))}, :name keechma.controller-manager/apply-start-controllers, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :end-column 30, :method-params ([app-db reporter controllers commands-chan get-running start]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 6, :fn-var true, :arglists (quote ([app-db reporter controllers commands-chan get-running start]))}, start-ssr {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :line 140, :column 7, :end-line 140, :end-column 16, :arglists (quote ([routes-chan commands-chan app-db-atom controllers reporter done-cb]))}, :name keechma.controller-manager/start-ssr, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :end-column 16, :method-params ([routes-chan commands-chan app-db-atom controllers reporter done-cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 140, :end-line 140, :max-fixed-arity 6, :fn-var true, :arglists (quote ([routes-chan commands-chan app-db-atom controllers reporter done-cb]))}, route-command-to-controller {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :line 12, :column 17, :end-line 12, :end-column 44, :private true, :arglists (quote ([reporter controllers command-name command-args]))}, :private true, :name keechma.controller-manager/route-command-to-controller, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :end-column 44, :method-params ([reporter controllers command-name command-args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 4, :fn-var true, :arglists (quote ([reporter controllers command-name command-args]))}, start {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :line 158, :column 7, :end-line 158, :end-column 12, :arglists (quote ([route-chan commands-chan app-db-atom controllers reporter])), :doc "Starts the controller manager. Controller manager is the central part\n  of the application that manages the lifecycle of the controllers and routes\n  the messages sent to them.\n\n  `start` function receives the following parameters:\n  \n  - `route-chan` - Route changes will communicated through this channel\n  - `commands-chan` - User (UI) commands will be sent through this channel\n  - `app-db` - application state atom\n  - `controllers` map of controllers registered for the app\n\n  Each time when the new route data comes through the `route-chan` controller\n  manager will do the following:\n\n  - call the `params` function on each registered controller\n  - compare the value returned by the `params` function with the value that\n  was returned last time when the route changes\n  - based on the comparison it will do one of the following:\n    - if the last value was `nil` and the current value is `nil` - do nothing\n    - if the last value was `nil` and the current value is not `nil` - start the controller\n    - if the last value was not `nil` and the current value is `nil` - stop the controller\n    - if the last value was not `nil` and the current value is not `nil` and these values are the same - do nothing\n    - if the last value was not `nil` and the current value is not `nil` and these values are different - restart the controller (stop the current instance and start the new one)\n\n  Controller manager also acts as a command router. Each time a command comes - through the `commands-chan`\n  the name of the command should look like this `[:controlnler-key :command-name]`. Controller manager will route the `:command-name` command to the appropriate controller based on the `:controller-key`. Controller key is the key under which the controller was registered in the `controllers` argument.\n  "}, :name keechma.controller-manager/start, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :end-column 12, :method-params ([route-chan commands-chan app-db-atom controllers reporter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 5, :fn-var true, :arglists (quote ([route-chan commands-chan app-db-atom controllers reporter])), :doc "Starts the controller manager. Controller manager is the central part\n  of the application that manages the lifecycle of the controllers and routes\n  the messages sent to them.\n\n  `start` function receives the following parameters:\n  \n  - `route-chan` - Route changes will communicated through this channel\n  - `commands-chan` - User (UI) commands will be sent through this channel\n  - `app-db` - application state atom\n  - `controllers` map of controllers registered for the app\n\n  Each time when the new route data comes through the `route-chan` controller\n  manager will do the following:\n\n  - call the `params` function on each registered controller\n  - compare the value returned by the `params` function with the value that\n  was returned last time when the route changes\n  - based on the comparison it will do one of the following:\n    - if the last value was `nil` and the current value is `nil` - do nothing\n    - if the last value was `nil` and the current value is not `nil` - start the controller\n    - if the last value was not `nil` and the current value is `nil` - stop the controller\n    - if the last value was not `nil` and the current value is not `nil` and these values are the same - do nothing\n    - if the last value was not `nil` and the current value is not `nil` and these values are different - restart the controller (stop the current instance and start the new one)\n\n  Controller manager also acts as a command router. Each time a command comes - through the `commands-chan`\n  the name of the command should look like this `[:controlnler-key :command-name]`. Controller manager will route the `:command-name` command to the appropriate controller based on the `:controller-key`. Controller key is the key under which the controller was registered in the `controllers` argument.\n  "}, route-change-execution-plan {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :line 19, :column 7, :end-line 19, :end-column 34, :arglists (quote ([route-params running-controllers controllers]))}, :name keechma.controller-manager/route-change-execution-plan, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :end-column 34, :method-params ([route-params running-controllers controllers]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 3, :fn-var true, :arglists (quote ([route-params running-controllers controllers]))}, call-ssr-handler-on-started-controllers {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :line 115, :column 7, :end-line 115, :end-column 46, :arglists (quote ([app-db-atom reporter start ssr-handler-done-cb]))}, :name keechma.controller-manager/call-ssr-handler-on-started-controllers, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :end-column 46, :method-params ([app-db-atom reporter start ssr-handler-done-cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 4, :fn-var true, :arglists (quote ([app-db-atom reporter start ssr-handler-done-cb]))}, send-route-changed-to-surviving-controllers {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :line 97, :column 7, :end-line 97, :end-column 50, :arglists (quote ([app-db-atom reporter route-changed route-params]))}, :name keechma.controller-manager/send-route-changed-to-surviving-controllers, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :end-column 50, :method-params ([app-db-atom reporter route-changed route-params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 4, :fn-var true, :arglists (quote ([app-db-atom reporter route-changed route-params]))}, call-handler-on-started-controllers {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :line 91, :column 7, :end-line 91, :end-column 42, :arglists (quote ([app-db-atom reporter start]))}, :name keechma.controller-manager/call-handler-on-started-controllers, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/controller_manager.cljs", :end-column 42, :method-params ([app-db-atom reporter start]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 3, :fn-var true, :arglists (quote ([app-db-atom reporter start]))}}, :require-macros {m cljs.core.async.macros, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:args :controller :else :name :out-chan :start :params :command :running-controllers :recur :ssr-handler :route :running :route-params :internal :stop :reporter :out :running-chans :app :info :in-chan :handler :route-changed :wake :in}, :order [:controller :in :name :info :in-chan :command :args :stop :start :wake :route-changed :params :else :internal :running-controllers :app :out :out-chan :route-params :route :reporter :running :handler :ssr-handler :recur :running-chans]}, :doc nil}