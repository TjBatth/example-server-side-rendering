{:rename-macros {}, :renames {}, :externs {Error {}, Object {}}, :use-macros {reaction reagent.ratom, go cljs.core.async.macros}, :excludes #{}, :name keechma.app-state, :imports nil, :requires {t cognitect.transit, reagent reagent.core, keechma.ui-component keechma.ui-component, reagent.core reagent.core, controller keechma.controller, keechma.app-state.history-router keechma.app-state.history-router, keechma.app-state.core keechma.app-state.core, cljs.core.async cljs.core.async, cognitect.transit cognitect.transit, controller-manager keechma.controller-manager, history-router keechma.app-state.history-router, keechma.controller keechma.controller, keechma.controller-manager keechma.controller-manager, ui keechma.ui-component, keechma.app-state.react-native-router keechma.app-state.react-native-router, keechma.app-state.hashchange-router keechma.app-state.hashchange-router, hashchange-router keechma.app-state.hashchange-router, react-native-router keechma.app-state.react-native-router, app-state-core keechma.app-state.core}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, cursor reagent.core, put! cljs.core.async}, :defs {get-controller-types-set {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 31, :column 7, :end-line 31, :end-column 31, :arglists (quote ([app-state]))}, :name keechma.app-state/get-controller-types-set, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 31, :method-params ([app-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([app-state]))}, add-stop-fn {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 131, :column 17, :end-line 131, :end-column 28, :private true, :arglists (quote ([state stop-fn]))}, :private true, :name keechma.app-state/add-stop-fn, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 28, :method-params ([state stop-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state stop-fn]))}, ->AppStateWriteHandler {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 65, :column 10, :end-line 65, :end-column 30, :protocols #{keechma.app-state/Object}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([]))}, :protocols #{keechma.app-state/Object}, :name keechma.app-state/->AppStateWriteHandler, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 65, :end-line 65, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :skip-protocol-flag nil}, app-renderer {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 167, :column 7, :end-line 167, :end-column 19, :arglists (quote ([state]))}, :name keechma.app-state/app-renderer, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 167, :end-line 167, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, add-sub-cache {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 199, :column 7, :end-line 199, :end-column 20, :arglists (quote ([cache [key sub]]))}, :name keechma.app-state/add-sub-cache, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 20, :method-params ([cache p__28621]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cache [key sub]]))}, mount-to-element! {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 176, :column 17, :end-line 176, :end-column 34, :private true, :arglists (quote ([state]))}, :private true, :name keechma.app-state/mount-to-element!, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 34, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, start-controllers {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 183, :column 17, :end-line 183, :end-column 34, :private true, :arglists (quote ([state]))}, :private true, :name keechma.app-state/start-controllers, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 34, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 183, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, map->SerializedAppState {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 29, :column 12, :end-line 29, :end-column 30, :internal-ctor true, :factory :map, :arglists (quote ([G__28599]))}, :name keechma.app-state/map->SerializedAppState, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 30, :method-params ([G__28599]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__28599]))}, app-db {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 90, :column 17, :end-line 90, :end-column 23, :private true, :arglists (quote ([initial-data]))}, :private true, :name keechma.app-state/app-db, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 23, :method-params ([initial-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([initial-data]))}, prepare-for-serialization {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 34, :column 7, :end-line 34, :end-column 32, :arglists (quote ([value] [value controller-types])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([value] [value controller-types]), :arglists ([value] [value controller-types]), :arglists-meta (nil nil)}}, :name keechma.app-state/prepare-for-serialization, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 32, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([value] [value controller-types]), :arglists ([value] [value controller-types]), :arglists-meta (nil nil)}, :method-params ([value] [value controller-types]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists ([value] [value controller-types])}, resolve-main-component {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 152, :column 17, :end-line 152, :end-column 39, :private true, :arglists (quote ([state]))}, :private true, :name keechma.app-state/resolve-main-component, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 39, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, start! {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 231, :column 7, :end-line 231, :end-column 13, :arglists (quote ([config] [config should-mount?])), :doc "Starts the application. It receives the application config `map` as the first argument.\n  It receives `boolean` `should-mount?` as the second element. Default value for `should-mount?`\n  is `true`.\n\n  You can pass false to the `should-mount?` argument if you want to start the app,\n  but you want to manually mount the application (for instance another app could manage mounting\n  and unmounting). In that case you can get the main app component at the `:main-component` of the\n  map returned from the `start!` function.\n\n  Application config contains all the parts needed to run the application:\n\n  - Route defintions\n  - Controllers\n  - UI subscriptions\n  - UI components \n  - HTML element to which the component should be mounted\n  - Routes chan (through which the route changes will be communicated)\n  - Commands chan (through which the UI sends the commands to the controllers)\n\n  `start!` function returns the updated config map which can be passed to the `stop!`\n  function to stop the application.\n\n  Example:\n\n  ```clojure\n  (def app-config {:controllers {:users (->users/Controller)}\n                   :subscriptions {:user-list (fn [app-db-atom])}\n                   :components {:main layout/component\n                                :users users/component}\n                   :html-element (.getElementById js/document \"app\")})\n  ```\n\n  If any of the params is missing, the defaults will be used.\n\n  When the application is started, the following happens:\n\n  1. Routes are expanded (converted to regexps, etc.)\n  2. Application binds the listener the history change event\n  3. Controller manager is started\n  4. Application is (optionally) mounted into the DOM\n  \n  ", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([config] [config should-mount?]), :arglists ([config] [config should-mount?]), :arglists-meta (nil nil)}}, :name keechma.app-state/start!, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([config] [config should-mount?]), :arglists ([config] [config should-mount?]), :arglists-meta (nil nil)}, :method-params ([config] [config should-mount?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 231, :end-line 231, :max-fixed-arity 2, :fn-var true, :arglists ([config] [config should-mount?]), :doc "Starts the application. It receives the application config `map` as the first argument.\n  It receives `boolean` `should-mount?` as the second element. Default value for `should-mount?`\n  is `true`.\n\n  You can pass false to the `should-mount?` argument if you want to start the app,\n  but you want to manually mount the application (for instance another app could manage mounting\n  and unmounting). In that case you can get the main app component at the `:main-component` of the\n  map returned from the `start!` function.\n\n  Application config contains all the parts needed to run the application:\n\n  - Route defintions\n  - Controllers\n  - UI subscriptions\n  - UI components \n  - HTML element to which the component should be mounted\n  - Routes chan (through which the route changes will be communicated)\n  - Commands chan (through which the UI sends the commands to the controllers)\n\n  `start!` function returns the updated config map which can be passed to the `stop!`\n  function to stop the application.\n\n  Example:\n\n  ```clojure\n  (def app-config {:controllers {:users (->users/Controller)}\n                   :subscriptions {:user-list (fn [app-db-atom])}\n                   :components {:main layout/component\n                                :users users/component}\n                   :html-element (.getElementById js/document \"app\")})\n  ```\n\n  If any of the params is missing, the defaults will be used.\n\n  When the application is started, the following happens:\n\n  1. Routes are expanded (converted to regexps, etc.)\n  2. Application binds the listener the history change event\n  3. Controller manager is started\n  4. Application is (optionally) mounted into the DOM\n  \n  "}, ->ControllerWriteHandler {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 59, :column 10, :end-line 59, :end-column 32, :protocols #{keechma.app-state/Object}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([]))}, :protocols #{keechma.app-state/Object}, :name keechma.app-state/->ControllerWriteHandler, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 32, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 59, :end-line 59, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :skip-protocol-flag nil}, process-config {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 111, :column 17, :end-line 111, :end-column 31, :private true, :arglists (quote ([config]))}, :private true, :name keechma.app-state/process-config, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 31, :method-params ([config]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 1, :fn-var true, :arglists (quote ([config]))}, AppStateWriteHandler {:num-fields 0, :protocols #{keechma.app-state/Object}, :name keechma.app-state/AppStateWriteHandler, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 30, :type true, :column 10, :line 65, :record false, :end-line 65, :skip-protocol-flag nil}, ->AppState {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 15, :column 12, :end-line 15, :end-column 20, :internal-ctor true, :factory :positional, :arglists (quote ([name reporter router routes-chan commands-chan app-db subscriptions-cache components controllers context html-element stop-fns]))}, :name keechma.app-state/->AppState, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 20, :method-params ([name reporter router routes-chan commands-chan app-db subscriptions-cache components controllers context html-element stop-fns]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 15, :end-line 15, :max-fixed-arity 12, :fn-var true, :arglists (quote ([name reporter router routes-chan commands-chan app-db subscriptions-cache components controllers context html-element stop-fns]))}, default-config {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 97, :column 17, :end-line 97, :end-column 31, :private true, :arglists (quote ([initial-data]))}, :private true, :name keechma.app-state/default-config, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 31, :method-params ([initial-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 1, :fn-var true, :arglists (quote ([initial-data]))}, map->AppState {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 15, :column 12, :end-line 15, :end-column 20, :internal-ctor true, :factory :map, :arglists (quote ([G__28591]))}, :name keechma.app-state/map->AppState, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 20, :method-params ([G__28591]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__28591]))}, get-initial-data {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 224, :column 7, :end-line 224, :end-column 23, :arglists (quote ([config]))}, :name keechma.app-state/get-initial-data, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 23, :method-params ([config]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 224, :end-line 224, :max-fixed-arity 1, :fn-var true, :arglists (quote ([config]))}, stop! {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 286, :column 7, :end-line 286, :end-column 12, :arglists (quote ([config] [config done])), :doc "Stops the application. `stop!` function receives the following as the arguments:\n\n  - `config` - App config map returned from the `start!` function\n  - `done` - An optional callback function that will be called when the application\n  is stopped.\n\n  Purpose of the `stop!` function is to completely clean up after the application. When the\n  application is stopped, the following happens:\n\n  1. History change event listener is unbound\n  2. Controller manager and any running controllers are stopped\n  3. Any channels used by the app (`routes-chan`, `commands-chan`,...) are closed\n  4. Application is unmounted and removed from the DOM\n  ", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([config] [config done]), :arglists ([config] [config done]), :arglists-meta (nil nil)}}, :name keechma.app-state/stop!, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([config] [config done]), :arglists ([config] [config done]), :arglists-meta (nil nil)}, :method-params ([config] [config done]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 286, :end-line 286, :max-fixed-arity 2, :fn-var true, :arglists ([config] [config done]), :doc "Stops the application. `stop!` function receives the following as the arguments:\n\n  - `config` - App config map returned from the `start!` function\n  - `done` - An optional callback function that will be called when the application\n  is stopped.\n\n  Purpose of the `stop!` function is to completely clean up after the application. When the\n  application is stopped, the following happens:\n\n  1. History change event listener is unbound\n  2. Controller manager and any running controllers are stopped\n  3. Any channels used by the app (`routes-chan`, `commands-chan`,...) are closed\n  4. Application is unmounted and removed from the DOM\n  "}, SerializedAppState {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name keechma.app-state/SerializedAppState, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 30, :type true, :column 12, :internal-ctor true, :line 29, :record true, :end-line 29, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, add-redirect-fn-to-controllers {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 122, :column 17, :end-line 122, :end-column 47, :private true, :arglists (quote ([controllers router]))}, :private true, :name keechma.app-state/add-redirect-fn-to-controllers, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 47, :method-params ([controllers router]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 2, :fn-var true, :arglists (quote ([controllers router]))}, ControllerWriteHandler {:num-fields 0, :protocols #{keechma.app-state/Object}, :name keechma.app-state/ControllerWriteHandler, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 32, :type true, :column 10, :line 59, :record false, :end-line 59, :skip-protocol-flag nil}, serialize-app-state {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 72, :column 7, :end-line 72, :end-column 26, :arglists (quote ([transit-writers state]))}, :name keechma.app-state/serialize-app-state, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 26, :method-params ([transit-writers state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([transit-writers state]))}, ->SerializedAppState {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 29, :column 12, :end-line 29, :end-column 30, :internal-ctor true, :factory :positional, :arglists (quote ([app-db]))}, :name keechma.app-state/->SerializedAppState, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 30, :method-params ([app-db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([app-db]))}, add-context-to-controllers {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 127, :column 17, :end-line 127, :end-column 43, :private true, :arglists (quote ([controllers context]))}, :private true, :name keechma.app-state/add-context-to-controllers, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 43, :method-params ([controllers context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 2, :fn-var true, :arglists (quote ([controllers context]))}, start-router! {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 144, :column 7, :end-line 144, :end-column 20, :arglists (quote ([state]))}, :name keechma.app-state/start-router!, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 20, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 144, :end-line 144, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, add-reporter-to-controllers {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 118, :column 17, :end-line 118, :end-column 44, :private true, :arglists (quote ([controllers reporter]))}, :private true, :name keechma.app-state/add-reporter-to-controllers, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 44, :method-params ([controllers reporter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 2, :fn-var true, :arglists (quote ([controllers reporter]))}, AppState {:num-fields 12, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name keechma.app-state/AppState, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 20, :type true, :column 12, :internal-ctor true, :line 15, :record true, :end-line 15, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, deserialize-app-state {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 82, :column 7, :end-line 82, :end-column 28, :arglists (quote ([transit-readers serialized-state]))}, :name keechma.app-state/deserialize-app-state, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 28, :method-params ([transit-readers serialized-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists (quote ([transit-readers serialized-state]))}, start-subs-cache {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 209, :column 17, :end-line 209, :end-column 33, :private true, :arglists (quote ([state]))}, :private true, :name keechma.app-state/start-subs-cache, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 33, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 209, :end-line 209, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, start-selected-router! {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 134, :column 7, :end-line 134, :end-column 29, :arglists (quote ([state constructor]))}, :name keechma.app-state/start-selected-router!, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 29, :method-params ([state constructor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state constructor]))}, restore-app-db {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :line 215, :column 7, :end-line 215, :end-column 21, :arglists (quote ([old-app new-app]))}, :name keechma.app-state/restore-app-db, :variadic false, :file "/Users/retro/Projects/keechma/keechma/src/keechma/app_state.cljs", :end-column 21, :method-params ([old-app new-app]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 215, :end-line 215, :max-fixed-arity 2, :fn-var true, :arglists (quote ([old-app new-app]))}}, :require-macros {m cljs.core.async.macros, cljs.core.async.macros cljs.core.async.macros, reagent.ratom reagent.ratom, reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:controllers :routes app-db :entity-db :router :else :application controllers :kv :name :subscriptions-cache :params :running-controllers :recur :url-fn router :route :handlers :component :commands-chan :internal name :subscriptions :hashchange :stop subscriptions-cache :html-element :components :reporter :out :initial-data :routes-chan :stop-fns commands-chan :current-route-fn :context :main-component html-element components :json reporter routes-chan stop-fns :redirect-fn context :app-db}, :order [:name :reporter :router :routes-chan :commands-chan :app-db :subscriptions-cache :components :controllers :context :html-element :stop-fns name reporter router routes-chan commands-chan app-db subscriptions-cache components controllers context html-element stop-fns :params :else :internal :running-controllers :json :handlers :route :entity-db :kv :hashchange :application :redirect-fn :routes :url-fn :current-route-fn :component :out :main-component :subscriptions :stop :initial-data :recur]}, :doc nil}