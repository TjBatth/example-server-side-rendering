{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name macchiato.util.response, :imports nil, :requires {string cuerdas.core, cuerdas.core cuerdas.core, fs macchiato.fs, macchiato.fs macchiato.fs}, :uses nil, :defs {not-modified {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 214, :column 7, :end-line 214, :end-column 19, :arglists (quote ([])), :doc "304 Not Modified (Redirection)\n  The resource has not been modified since last requested."}, :name macchiato.util.response/not-modified, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 214, :end-line 214, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "304 Not Modified (Redirection)\n  The resource has not been modified since last requested."}, get-header {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 15, :column 7, :end-line 15, :end-column 17, :arglists (quote ([resp header-name])), :doc "Looks up a header in a response (or request) case insensitively,\n  returning the value of the header, or nil if not present."}, :name macchiato.util.response/get-header, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 17, :method-params ([resp header-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([resp header-name])), :doc "Looks up a header in a response (or request) case insensitively,\n  returning the value of the header, or nil if not present."}, bad-request {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 246, :column 7, :end-line 246, :end-column 18, :arglists (quote ([] [body])), :doc "400 Bad Request (ClientError)\n  The request contains bad syntax or cannot be fulfilled.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/bad-request, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 246, :end-line 246, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "400 Bad Request (ClientError)\n  The request contains bad syntax or cannot be fulfilled."}, not-implemented {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 526, :column 7, :end-line 526, :end-column 22, :arglists (quote ([] [body])), :doc "501 Not Implemented (ServerError)\n  The server either does not recognize the request method or it lacks the ability to fulfill the request.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/not-implemented, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 526, :end-line 526, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "501 Not Implemented (ServerError)\n  The server either does not recognize the request method or it lacks the ability to fulfill the request."}, bad-gateway {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 535, :column 7, :end-line 535, :end-column 18, :arglists (quote ([] [body])), :doc "502 Bad Gateway (ServerError)\n  The server was acting as a gateway or proxy and received an invalid response from the upstream server.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/bad-gateway, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 535, :end-line 535, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "502 Bad Gateway (ServerError)\n  The server was acting as a gateway or proxy and received an invalid response from the upstream server."}, use-proxy {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 222, :column 7, :end-line 222, :end-column 16, :arglists (quote ([url])), :doc "305 Use Proxy (Redirection)\n  This single request is to be repeated via the proxy given by the Location field."}, :name macchiato.util.response/use-proxy, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 16, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 222, :end-line 222, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url])), :doc "305 Use Proxy (Redirection)\n  This single request is to be repeated via the proxy given by the Location field."}, unprocessable-entity {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 418, :column 7, :end-line 418, :end-column 27, :arglists (quote ([] [body])), :doc "422 Unprocessable Entity (ClientError)\n  The request was well-formed but was unable to be followed due to semantic errors.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/unprocessable-entity, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 27, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 418, :end-line 418, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "422 Unprocessable Entity (ClientError)\n  The request was well-formed but was unable to be followed due to semantic errors."}, request-uri-too-long {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 373, :column 7, :end-line 373, :end-column 27, :arglists (quote ([] [body])), :doc "414 Request-URI Too Long (ClientError)\n  The URI provided was too long for the server to process.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/request-uri-too-long, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 27, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 373, :end-line 373, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "414 Request-URI Too Long (ClientError)\n  The URI provided was too long for the server to process."}, multiple-choices {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 182, :column 7, :end-line 182, :end-column 23, :arglists (quote ([url])), :doc "300 Multiple Choices (Redirection)\n  There are multiple options for the resource that the client may follow."}, :name macchiato.util.response/multiple-choices, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 23, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url])), :doc "300 Multiple Choices (Redirection)\n  There are multiple options for the resource that the client may follow."}, unavailable-for-legal-reasons {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 508, :column 7, :end-line 508, :end-column 36, :arglists (quote ([] [body])), :doc "451 Unavailable For Legal Reasons (ClientError)\n  Resource access is denied for legal reasons.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/unavailable-for-legal-reasons, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 36, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 508, :end-line 508, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "451 Unavailable For Legal Reasons (ClientError)\n  Resource access is denied for legal reasons."}, moved-permanently {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 190, :column 7, :end-line 190, :end-column 24, :arglists (quote ([url])), :doc "301 Moved Permanently (Redirection)\n  This and all future requests should be directed to the given URI."}, :name macchiato.util.response/moved-permanently, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 24, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 190, :end-line 190, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url])), :doc "301 Moved Permanently (Redirection)\n  This and all future requests should be directed to the given URI."}, retry-with {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 490, :column 7, :end-line 490, :end-column 17, :arglists (quote ([] [body])), :doc "449 Retry With (ClientError)\n  The request should be retried after doing the appropriate action.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/retry-with, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 490, :end-line 490, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "449 Retry With (ClientError)\n  The request should be retried after doing the appropriate action."}, variant-also-negotiates {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 571, :column 7, :end-line 571, :end-column 30, :arglists (quote ([] [body])), :doc "506 Variant Also Negotiates (ServerError)\n  Transparent content negotiation for the request results in a circular reference.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/variant-also-negotiates, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 30, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 571, :end-line 571, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "506 Variant Also Negotiates (ServerError)\n  Transparent content negotiation for the request results in a circular reference."}, conflict {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 327, :column 7, :end-line 327, :end-column 15, :arglists (quote ([] [body])), :doc "409 Conflict (ClientError)\n  The request could not be processed because of conflict in the request such as an edit conflict.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/conflict, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 327, :end-line 327, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "409 Conflict (ClientError)\n  The request could not be processed because of conflict in the request such as an edit conflict."}, no-content {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 130, :column 7, :end-line 130, :end-column 17, :arglists (quote ([])), :doc "204 No Content (Success)\n  The server successfully processed the request, but is not returning any content. Usually used as a response to a successful delete request."}, :name macchiato.util.response/no-content, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "204 No Content (Success)\n  The server successfully processed the request, but is not returning any content. Usually used as a response to a successful delete request."}, temporary-redirect {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 230, :column 7, :end-line 230, :end-column 25, :arglists (quote ([url])), :doc "307 Temporary Redirect (Redirection)\n  The request should be repeated with another URI but future requests can still use the original URI."}, :name macchiato.util.response/temporary-redirect, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 25, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 230, :end-line 230, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url])), :doc "307 Temporary Redirect (Redirection)\n  The request should be repeated with another URI but future requests can still use the original URI."}, reset-content {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 138, :column 7, :end-line 138, :end-column 20, :arglists (quote ([])), :doc "205 Reset Content (Success)\n  The server successfully processed the request but is not returning any content. Unlike a 204 response, this response requires that the requester reset the document view."}, :name macchiato.util.response/reset-content, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "205 Reset Content (Success)\n  The server successfully processed the request but is not returning any content. Unlike a 204 response, this response requires that the requester reset the document view."}, not-acceptable {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 300, :column 7, :end-line 300, :end-column 21, :arglists (quote ([] [body])), :doc "406 Not Acceptable (ClientError)\n  The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/not-acceptable, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 300, :end-line 300, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "406 Not Acceptable (ClientError)\n  The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."}, multi-status {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 155, :column 7, :end-line 155, :end-column 19, :arglists (quote ([] [body])), :doc "207 Multi-Status (Success)\n  The message body that follows is an XML message and can contain a number of separate response codes depending on how many sub-requests were made.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/multi-status, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "207 Multi-Status (Success)\n  The message body that follows is an XML message and can contain a number of separate response codes depending on how many sub-requests were made."}, insufficient-storage {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 580, :column 7, :end-line 580, :end-column 27, :arglists (quote ([] [body])), :doc "507 Insufficient Storage (ServerError)\n  Insufficient storage to complete the request.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/insufficient-storage, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 27, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 580, :end-line 580, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "507 Insufficient Storage (ServerError)\n  Insufficient storage to complete the request."}, http-version-not-supported {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 562, :column 7, :end-line 562, :end-column 33, :arglists (quote ([] [body])), :doc "505 HTTP Version Not Supported (ServerError)\n  The server does not support the HTTP protocol version used in the request.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/http-version-not-supported, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 33, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 562, :end-line 562, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "505 HTTP Version Not Supported (ServerError)\n  The server does not support the HTTP protocol version used in the request."}, find-header {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 6, :column 7, :end-line 6, :end-column 18, :arglists (quote ([resp header-name])), :doc "Looks up a header in a response (or request) case insensitively,\n  returning the header map entry, or nil if not present."}, :name macchiato.util.response/find-header, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 18, :method-params ([resp header-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([resp header-name])), :doc "Looks up a header in a response (or request) case insensitively,\n  returning the header map entry, or nil if not present."}, unauthorized {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 255, :column 7, :end-line 255, :end-column 19, :arglists (quote ([] [body])), :doc "401 Unauthorized (ClientError)\n  Authentication is possible but has failed or not yet been provided.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/unauthorized, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 255, :end-line 255, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "401 Unauthorized (ClientError)\n  Authentication is possible but has failed or not yet been provided."}, request-entity-too-large {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 364, :column 7, :end-line 364, :end-column 31, :arglists (quote ([] [body])), :doc "413 Request Entity Too Large (ClientError)\n  The request is larger than the server is willing or able to process.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/request-entity-too-large, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 31, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 364, :end-line 364, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "413 Request Entity Too Large (ClientError)\n  The request is larger than the server is willing or able to process."}, switching-protocols {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 77, :column 7, :end-line 77, :end-column 26, :arglists (quote ([])), :doc "101 Switching Protocols (Informational)\n  The server is switching protocols because the client requested the switch."}, :name macchiato.util.response/switching-protocols, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "101 Switching Protocols (Informational)\n  The server is switching protocols because the client requested the switch."}, gateway-timeout {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 553, :column 7, :end-line 553, :end-column 22, :arglists (quote ([] [body])), :doc "504 Gateway Timeout (ServerError)\n  The server was acting as a gateway or proxy and did not receive a timely request from the upstream server.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/gateway-timeout, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 553, :end-line 553, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "504 Gateway Timeout (ServerError)\n  The server was acting as a gateway or proxy and did not receive a timely request from the upstream server."}, processing {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 85, :column 7, :end-line 85, :end-column 17, :arglists (quote ([])), :doc "102 Processing (Informational)\n  The server is processing the request but no response is available yet."}, :name macchiato.util.response/processing, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "102 Processing (Informational)\n  The server is processing the request but no response is available yet."}, non-authoritative-information {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 121, :column 7, :end-line 121, :end-column 36, :arglists (quote ([] [body])), :doc "203 Non-Authoritative Information (Success)\n  The server successfully processed the request but is returning information that may be from another source.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/non-authoritative-information, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 36, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "203 Non-Authoritative Information (Success)\n  The server successfully processed the request but is returning information that may be from another source."}, precondition-failed {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 355, :column 7, :end-line 355, :end-column 26, :arglists (quote ([] [body])), :doc "412 Precondition Failed (ClientError)\n  The server does not meet one of the preconditions that the requester put on the request.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/precondition-failed, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 26, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 355, :end-line 355, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "412 Precondition Failed (ClientError)\n  The server does not meet one of the preconditions that the requester put on the request."}, im-used {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 173, :column 7, :end-line 173, :end-column 14, :arglists (quote ([] [body])), :doc "226 IM Used (Success)\n  The server has fulfilled a GET request for the resource and the response is a representation of the result of one or more instance-manipulations applied to the current instance.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/im-used, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 173, :end-line 173, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "226 IM Used (Success)\n  The server has fulfilled a GET request for the resource and the response is a representation of the result of one or more instance-manipulations applied to the current instance."}, continue {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 69, :column 7, :end-line 69, :end-column 15, :arglists (quote ([])), :doc "100 Continue (Informational)\n  The server has received the request headers and the client should proceed to send the request body."}, :name macchiato.util.response/continue, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "100 Continue (Informational)\n  The server has received the request headers and the client should proceed to send the request body."}, method-not-allowed {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 291, :column 7, :end-line 291, :end-column 25, :arglists (quote ([] [body])), :doc "405 Method Not Allowed (ClientError)\n  A request was made of a resource using a request method not supported by that resource;", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/method-not-allowed, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 25, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 291, :end-line 291, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "405 Method Not Allowed (ClientError)\n  A request was made of a resource using a request method not supported by that resource;"}, loop-detected {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 589, :column 7, :end-line 589, :end-column 20, :arglists (quote ([] [body])), :doc "508 Loop Detected (ServerError)\n  The server detected an infinite loop while processing the request.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/loop-detected, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 589, :end-line 589, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "508 Loop Detected (ServerError)\n  The server detected an infinite loop while processing the request."}, see-other {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 206, :column 7, :end-line 206, :end-column 16, :arglists (quote ([url])), :doc "303 See Other (Redirection)\n  The response to the request can be found under another URI using a GET method."}, :name macchiato.util.response/see-other, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 16, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 206, :end-line 206, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url])), :doc "303 See Other (Redirection)\n  The response to the request can be found under another URI using a GET method."}, file {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 55, :column 7, :end-line 55, :end-column 11, :arglists (quote ([path])), :doc "accepts a path to a file, and returns a response with the body set to the file stream."}, :name macchiato.util.response/file, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 11, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path])), :doc "accepts a path to a file, and returns a response with the body set to the file stream."}, accepted {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 112, :column 7, :end-line 112, :end-column 15, :arglists (quote ([] [body])), :doc "202 Accepted (Success)\n  The request has been accepted for processing but the processing has not been completed.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/accepted, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "202 Accepted (Success)\n  The request has been accepted for processing but the processing has not been completed."}, request-header-fields-too-large {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 481, :column 7, :end-line 481, :end-column 38, :arglists (quote ([] [body])), :doc "431 Request Header Fields Too Large (ClientError)\n  The server is unwilling to process the request because either an individual header field or all the header fields collectively are too large.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/request-header-fields-too-large, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 38, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 481, :end-line 481, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "431 Request Header Fields Too Large (ClientError)\n  The server is unwilling to process the request because either an individual header field or all the header fields collectively are too large."}, requested-range-not-satisfiable {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 391, :column 7, :end-line 391, :end-column 38, :arglists (quote ([] [body])), :doc "416 Requested Range Not Satisfiable (ClientError)\n  The client has asked for a portion of the file but the server cannot supply that portion.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/requested-range-not-satisfiable, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 38, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 391, :end-line 391, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "416 Requested Range Not Satisfiable (ClientError)\n  The client has asked for a portion of the file but the server cannot supply that portion."}, failed-dependency {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 436, :column 7, :end-line 436, :end-column 24, :arglists (quote ([] [body])), :doc "424 Failed Dependency (ClientError)\n  The request failed due to failure of a previous request.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/failed-dependency, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 24, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 436, :end-line 436, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "424 Failed Dependency (ClientError)\n  The request failed due to failure of a previous request."}, payment-required {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 264, :column 7, :end-line 264, :end-column 23, :arglists (quote ([] [body])), :doc "402 Payment Required (ClientError)\n  Reserved for future use.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/payment-required, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 23, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 264, :end-line 264, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "402 Payment Required (ClientError)\n  Reserved for future use."}, created {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 102, :column 7, :end-line 102, :end-column 14, :arglists (quote ([] [url] [url body])), :doc "201 Created (Success)\n  The request has been fulfilled and resulted in a new resource being created.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [url] [url body]), :arglists ([] [url] [url body]), :arglists-meta (nil nil nil)}}, :name macchiato.util.response/created, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [url] [url body]), :arglists ([] [url] [url body]), :arglists-meta (nil nil nil)}, :method-params ([] [url] [url body]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 2, :fn-var true, :arglists ([] [url] [url body]), :doc "201 Created (Success)\n  The request has been fulfilled and resulted in a new resource being created."}, network-authentication-required {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 616, :column 7, :end-line 616, :end-column 38, :arglists (quote ([] [body])), :doc "511 Network Authentication Required (ServerError)\n  The client needs to authenticate to gain network access.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/network-authentication-required, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 38, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 616, :end-line 616, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "511 Network Authentication Required (ServerError)\n  The client needs to authenticate to gain network access."}, permanent-redirect {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 238, :column 7, :end-line 238, :end-column 25, :arglists (quote ([url])), :doc "308 Permanent Redirect (Redirection)\n  The request and all future requests should be repeated using another URI."}, :name macchiato.util.response/permanent-redirect, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 25, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 238, :end-line 238, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url])), :doc "308 Permanent Redirect (Redirection)\n  The request and all future requests should be repeated using another URI."}, enhance-your-calm {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 409, :column 7, :end-line 409, :end-column 24, :arglists (quote ([] [body])), :doc "420 Enhance Your Calm (ClientError)\n  You are being rate-limited.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/enhance-your-calm, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 24, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 409, :end-line 409, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "420 Enhance Your Calm (ClientError)\n  You are being rate-limited."}, gone {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 336, :column 7, :end-line 336, :end-column 11, :arglists (quote ([] [body])), :doc "410 Gone (ClientError)\n  The resource requested is no longer available and will not be available again.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/gone, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 336, :end-line 336, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "410 Gone (ClientError)\n  The resource requested is no longer available and will not be available again."}, already-reported {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 164, :column 7, :end-line 164, :end-column 23, :arglists (quote ([] [body])), :doc "208 Already Reported (Success)\n  The members of a DAV binding have already been enumerated in a previous reply to this request and are not being included again.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/already-reported, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 23, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "208 Already Reported (Success)\n  The members of a DAV binding have already been enumerated in a previous reply to this request and are not being included again."}, upgrade-required {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 454, :column 7, :end-line 454, :end-column 23, :arglists (quote ([] [body])), :doc "426 Upgrade Required (ClientError)\n  The client should switch to a different protocol.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/upgrade-required, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 23, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 454, :end-line 454, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "426 Upgrade Required (ClientError)\n  The client should switch to a different protocol."}, expectation-failed {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 400, :column 7, :end-line 400, :end-column 25, :arglists (quote ([] [body])), :doc "417 Expectation Failed (ClientError)\n  The server cannot meet the requirements of the Expect request-header field.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/expectation-failed, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 25, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 400, :end-line 400, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "417 Expectation Failed (ClientError)\n  The server cannot meet the requirements of the Expect request-header field."}, header {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 29, :column 7, :end-line 29, :end-column 13, :arglists (quote ([resp name value])), :doc "Returns an updated response with the specified header added."}, :name macchiato.util.response/header, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 13, :method-params ([resp name value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 3, :fn-var true, :arglists (quote ([resp name value])), :doc "Returns an updated response with the specified header added."}, unsupported-media-type {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 382, :column 7, :end-line 382, :end-column 29, :arglists (quote ([] [body])), :doc "415 Unsupported Media Type (ClientError)\n  The request entity has a media type which the server or resource does not support.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/unsupported-media-type, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 29, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 382, :end-line 382, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "415 Unsupported Media Type (ClientError)\n  The request entity has a media type which the server or resource does not support."}, forbidden {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 273, :column 7, :end-line 273, :end-column 16, :arglists (quote ([] [body])), :doc "403 Forbidden (ClientError)\n  The request was a legal request but the server is refusing to respond to it.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/forbidden, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 273, :end-line 273, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "403 Forbidden (ClientError)\n  The request was a legal request but the server is refusing to respond to it."}, internal-server-error {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 517, :column 7, :end-line 517, :end-column 28, :arglists (quote ([] [body])), :doc "500 Internal Server Error (ServerError)\n  There was an internal server error.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/internal-server-error, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 28, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 517, :end-line 517, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "500 Internal Server Error (ServerError)\n  There was an internal server error."}, charset {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 40, :column 7, :end-line 40, :end-column 14, :arglists (quote ([resp charset])), :doc "Returns an updated response with the supplied charset added to the\n  Content-Type header."}, :name macchiato.util.response/charset, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 14, :method-params ([resp charset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([resp charset])), :doc "Returns an updated response with the supplied charset added to the\n  Content-Type header."}, network-read-timeout {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 625, :column 7, :end-line 625, :end-column 27, :arglists (quote ([] [body])), :doc "598 Network read timeout (ServerError)\n  ", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/network-read-timeout, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 27, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 625, :end-line 625, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "598 Network read timeout (ServerError)\n  "}, network-connect-timeout {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 634, :column 7, :end-line 634, :end-column 30, :arglists (quote ([] [body])), :doc "599 Network connect timeout (ServerError)\n  ", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/network-connect-timeout, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 30, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 634, :end-line 634, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "599 Network connect timeout (ServerError)\n  "}, bandwidth-limit-exceeded {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 598, :column 7, :end-line 598, :end-column 31, :arglists (quote ([] [body])), :doc "509 Bandwidth Limit Exceeded (ServerError)\n  Bandwidth limit has been exceeded.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/bandwidth-limit-exceeded, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 31, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 598, :end-line 598, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "509 Bandwidth Limit Exceeded (ServerError)\n  Bandwidth limit has been exceeded."}, request-timeout {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 318, :column 7, :end-line 318, :end-column 22, :arglists (quote ([] [body])), :doc "408 Request Timeout (ClientError)\n  The server timed out waiting for the request.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/request-timeout, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 318, :end-line 318, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "408 Request Timeout (ClientError)\n  The server timed out waiting for the request."}, update-header {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 21, :column 7, :end-line 21, :end-column 20, :arglists (quote ([resp header-name f & args])), :doc "Looks up a header in a response (or request) case insensitively,\n  then updates the header with the supplied function and arguments in the\n  manner of update-in.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(resp header-name f args)], :arglists ([resp header-name f & args]), :arglists-meta (nil)}}, :name macchiato.util.response/update-header, :variadic true, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(resp header-name f args)], :arglists ([resp header-name f & args]), :arglists-meta (nil)}, :method-params [(resp header-name f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 3, :fn-var true, :arglists ([resp header-name f & args]), :doc "Looks up a header in a response (or request) case insensitively,\n  then updates the header with the supplied function and arguments in the\n  manner of update-in."}, not-extended {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 607, :column 7, :end-line 607, :end-column 19, :arglists (quote ([] [body])), :doc "510 Not Extended (ServerError)\n  Further extensions to the request are required for the server to fulfill it.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/not-extended, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 607, :end-line 607, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "510 Not Extended (ServerError)\n  Further extensions to the request are required for the server to fulfill it."}, service-unavailable {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 544, :column 7, :end-line 544, :end-column 26, :arglists (quote ([] [body])), :doc "503 Service Unavailable (ServerError)\n  The server is currently unavailable (because it is overloaded or down for maintenance).", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/service-unavailable, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 26, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 544, :end-line 544, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "503 Service Unavailable (ServerError)\n  The server is currently unavailable (because it is overloaded or down for maintenance)."}, status {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 50, :column 7, :end-line 50, :end-column 13, :arglists (quote ([resp status])), :doc "sets the status code of the response"}, :name macchiato.util.response/status, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 13, :method-params ([resp status]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 2, :fn-var true, :arglists (quote ([resp status])), :doc "sets the status code of the response"}, locked {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 427, :column 7, :end-line 427, :end-column 13, :arglists (quote ([] [body])), :doc "423 Locked (ClientError)\n  The resource that is being accessed is locked.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/locked, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 427, :end-line 427, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "423 Locked (ClientError)\n  The resource that is being accessed is locked."}, ok {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 93, :column 7, :end-line 93, :end-column 9, :arglists (quote ([] [body])), :doc "200 OK (Success)\n  OK", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/ok, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 9, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "200 OK (Success)\n  OK"}, not-found {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 282, :column 7, :end-line 282, :end-column 16, :arglists (quote ([] [body])), :doc "404 Not Found (ClientError)\n  The requested resource could not be found but may be available again in the future.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/not-found, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 282, :end-line 282, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "404 Not Found (ClientError)\n  The requested resource could not be found but may be available again in the future."}, proxy-authentication-required {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 309, :column 7, :end-line 309, :end-column 36, :arglists (quote ([] [body])), :doc "407 Proxy Authentication Required (ClientError)\n  Proxy authentication is required to access the requested resource.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/proxy-authentication-required, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 36, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 309, :end-line 309, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "407 Proxy Authentication Required (ClientError)\n  Proxy authentication is required to access the requested resource."}, blocked-by-windows-parental-controls {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 499, :column 7, :end-line 499, :end-column 43, :arglists (quote ([] [body])), :doc "450 Blocked by Windows Parental Controls (ClientError)\n  Windows Parental Controls are turned on and are blocking access to the given webpage.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/blocked-by-windows-parental-controls, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 43, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 499, :end-line 499, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "450 Blocked by Windows Parental Controls (ClientError)\n  Windows Parental Controls are turned on and are blocking access to the given webpage."}, found {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 198, :column 7, :end-line 198, :end-column 12, :arglists (quote ([url])), :doc "302 Found (Redirection)\n  The resource was found but at a different URI."}, :name macchiato.util.response/found, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 12, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 198, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url])), :doc "302 Found (Redirection)\n  The resource was found but at a different URI."}, content-type {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 34, :column 7, :end-line 34, :end-column 19, :arglists (quote ([resp content-type])), :doc "Returns an updated response with the a Content-Type header corresponding\n  to the given content-type."}, :name macchiato.util.response/content-type, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 19, :method-params ([resp content-type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([resp content-type])), :doc "Returns an updated response with the a Content-Type header corresponding\n  to the given content-type."}, precondition-required {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 463, :column 7, :end-line 463, :end-column 28, :arglists (quote ([] [body])), :doc "428 Precondition Required (ClientError)\n  The server requires the request to be conditional.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/precondition-required, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 28, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 463, :end-line 463, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "428 Precondition Required (ClientError)\n  The server requires the request to be conditional."}, too-many-requests {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 472, :column 7, :end-line 472, :end-column 24, :arglists (quote ([] [body])), :doc "429 Too Many Requests (ClientError)\n  The user has sent too many requests in a given amount of time.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/too-many-requests, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 24, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 472, :end-line 472, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "429 Too Many Requests (ClientError)\n  The user has sent too many requests in a given amount of time."}, unordered-collection {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 445, :column 7, :end-line 445, :end-column 27, :arglists (quote ([] [body])), :doc "425 Unordered Collection (ClientError)\n  The collection is unordered.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/unordered-collection, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 27, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 445, :end-line 445, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "425 Unordered Collection (ClientError)\n  The collection is unordered."}, length-required {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 346, :column 7, :end-line 346, :end-column 22, :arglists (quote ([] [body])), :doc "411 Length Required (ClientError)\n  The request did not specify the length of its content which is required by the requested resource.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/length-required, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 346, :end-line 346, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "411 Length Required (ClientError)\n  The request did not specify the length of its content which is required by the requested resource."}, response? {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 62, :column 7, :end-line 62, :end-column 16, :arglists (quote ([resp])), :doc "True if the supplied value is a valid response map."}, :name macchiato.util.response/response?, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 16, :method-params ([resp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([resp])), :doc "True if the supplied value is a valid response map."}, partial-content {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/util/response.cljs", :line 146, :column 7, :end-line 146, :end-column 22, :arglists (quote ([] [body])), :doc "206 Partial Content (Success)\n  The server is delivering only part of the resource due to a range header sent by the client.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}}, :name macchiato.util.response/partial-content, :variadic false, :file "public/js/compiled/dev/macchiato/util/response.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [body]), :arglists ([] [body]), :arglists-meta (nil nil)}, :method-params ([] [body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 1, :fn-var true, :arglists ([] [body]), :doc "206 Partial Content (Success)\n  The server is delivering only part of the resource due to a range header sent by the client."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:headers :status :body}, :order [:headers :status :body]}, :doc nil}