{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name macchiato.middleware.ssl, :imports nil, :requires {node cljs.nodejs, cljs.nodejs cljs.nodejs, str clojure.string, clojure.string clojure.string, resp macchiato.util.response, macchiato.util.response macchiato.util.response, req macchiato.util.request, macchiato.util.request macchiato.util.request}, :uses nil, :defs {hsts-response {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/ssl.cljs", :line 95, :column 7, :end-line 95, :end-column 20, :arglists (quote ([response] [response options])), :doc "Add the Strict-Transport-Security header to the response. See: wrap-hsts.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([response] [response options]), :arglists ([response] [response options]), :arglists-meta (nil nil)}}, :name macchiato.middleware.ssl/hsts-response, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/ssl.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([response] [response options]), :arglists ([response] [response options]), :arglists-meta (nil nil)}, :method-params ([response] [response options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 2, :fn-var true, :arglists ([response] [response options]), :doc "Add the Strict-Transport-Security header to the response. See: wrap-hsts."}, wrap-hsts {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/ssl.cljs", :line 105, :column 3, :end-line 105, :end-column 12, :macchiato/middleware {:id :wrap-hsts}, :arglists (quote ([handler] [handler options])), :doc "Middleware that adds the Strict-Transport-Security header to the response\n  from the handler. This ensures the browser will only use HTTPS for future\n  requests to the domain.\n\n  Accepts the following options:\n\n  :max-age             - the max time in seconds the HSTS policy applies\n                         (defaults to 31536000 seconds, or 1 year)\n\n  :include-subdomains? - true if subdomains should be included in the HSTS\n                         policy (defaults to true)\n\n  See RFC 6797 for more information (https://tools.ietf.org/html/rfc6797).", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([handler] [handler options]), :arglists ([handler] [handler options]), :arglists-meta (nil nil)}}, :macchiato/middleware {:id :wrap-hsts}, :name macchiato.middleware.ssl/wrap-hsts, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/ssl.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([handler] [handler options]), :arglists ([handler] [handler options]), :arglists-meta (nil nil)}, :method-params ([handler] [handler options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 105, :max-fixed-arity 2, :fn-var true, :arglists ([handler] [handler options]), :doc "Middleware that adds the Strict-Transport-Security header to the response\n  from the handler. This ensures the browser will only use HTTPS for future\n  requests to the domain.\n\n  Accepts the following options:\n\n  :max-age             - the max time in seconds the HSTS policy applies\n                         (defaults to 31536000 seconds, or 1 year)\n\n  :include-subdomains? - true if subdomains should be included in the HSTS\n                         policy (defaults to true)\n\n  See RFC 6797 for more information (https://tools.ietf.org/html/rfc6797)."}, valid-url? {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/ssl.cljs", :line 46, :column 8, :end-line 46, :end-column 18, :private true, :arglists (quote ([url-string]))}, :private true, :name macchiato.middleware.ssl/valid-url?, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/ssl.cljs", :end-column 18, :method-params ([url-string]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url-string]))}, get-request? {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/ssl.cljs", :line 42, :column 8, :end-line 42, :end-column 20, :private true, :arglists (quote ([{method :request-method}]))}, :private true, :name macchiato.middleware.ssl/get-request?, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/ssl.cljs", :end-column 20, :method-params ([p__31053]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{method :request-method}]))}, wrap-ssl-redirect {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/ssl.cljs", :line 72, :column 3, :end-line 72, :end-column 20, :macchiato/middleware {:id :wrap-ssl-redirect}, :arglists (quote ([handler] [handler options])), :doc "Middleware that redirects any HTTP request to the equivalent HTTPS URL.\n\n  Accepts the following options:\n\n  :ssl-port - the SSL port to use for redirects, defaults to 443.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([handler] [handler options]), :arglists ([handler] [handler options]), :arglists-meta (nil nil)}}, :macchiato/middleware {:id :wrap-ssl-redirect}, :name macchiato.middleware.ssl/wrap-ssl-redirect, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/ssl.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([handler] [handler options]), :arglists ([handler] [handler options]), :arglists-meta (nil nil)}, :method-params ([handler] [handler options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists ([handler] [handler options]), :doc "Middleware that redirects any HTTP request to the equivalent HTTPS URL.\n\n  Accepts the following options:\n\n  :ssl-port - the SSL port to use for redirects, defaults to 443."}, forwarded-scheme-request {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/ssl.cljs", :line 14, :column 7, :end-line 14, :end-column 31, :arglists (quote ([request] [request header])), :doc "Change the :scheme of the request to the value present in a request header.\n  See: wrap-forwarded-scheme.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([request] [request header]), :arglists ([request] [request header]), :arglists-meta (nil nil)}}, :name macchiato.middleware.ssl/forwarded-scheme-request, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/ssl.cljs", :end-column 31, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([request] [request header]), :arglists ([request] [request header]), :arglists-meta (nil nil)}, :method-params ([request] [request header]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists ([request] [request header]), :doc "Change the :scheme of the request to the value present in a request header.\n  See: wrap-forwarded-scheme."}, https-url {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/ssl.cljs", :line 49, :column 8, :end-line 49, :end-column 17, :private true, :arglists (quote ([url-string port]))}, :private true, :name macchiato.middleware.ssl/https-url, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/ssl.cljs", :end-column 17, :method-params ([url-string port]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([url-string port]))}, default-scheme-header {:name macchiato.middleware.ssl/default-scheme-header, :file "public/js/compiled/dev/macchiato/middleware/ssl.cljs", :line 10, :column 1, :end-line 10, :end-column 27, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/ssl.cljs", :line 10, :column 6, :end-line 10, :end-column 27}, :doc "The default header used in wrap-forwarded-scheme (x-forwarded-proto).", :tag string}, build-hsts-header {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/ssl.cljs", :line 89, :column 8, :end-line 89, :end-column 25, :private true, :arglists (quote ([{:keys [max-age include-subdomains?], :or {max-age 31536000, include-subdomains? true}}]))}, :private true, :name macchiato.middleware.ssl/build-hsts-header, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/ssl.cljs", :end-column 25, :method-params ([p__31066]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [max-age include-subdomains?], :or {max-age 31536000, include-subdomains? true}}]))}, wrap-forwarded-scheme {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/ssl.cljs", :line 30, :column 3, :end-line 30, :end-column 24, :macchiato/middleware {:id :wrap-forwarded-scheme}, :arglists (quote ([handler] [handler header])), :doc "Middleware that changes the :scheme of the request map to the value present\n  in a request header. This is useful if your application sits behind a\n  reverse proxy or load balancer that handles the SSL transport.\n\n  The header defaults to x-forwarded-proto.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([handler] [handler header]), :arglists ([handler] [handler header]), :arglists-meta (nil nil)}}, :macchiato/middleware {:id :wrap-forwarded-scheme}, :name macchiato.middleware.ssl/wrap-forwarded-scheme, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/ssl.cljs", :end-column 24, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([handler] [handler header]), :arglists ([handler] [handler header]), :arglists-meta (nil nil)}, :method-params ([handler] [handler header]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists ([handler] [handler header]), :doc "Middleware that changes the :scheme of the request map to the value present\n  in a request header. This is useful if your application sits behind a\n  reverse proxy or load balancer that handles the SSL transport.\n\n  The header defaults to x-forwarded-proto."}, ssl-redirect-response {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/ssl.cljs", :line 62, :column 7, :end-line 62, :end-column 28, :arglists (quote ([request options])), :doc "Given a HTTP request, return a redirect response to the equivalent HTTPS URL.\n  See: wrap-ssl-redirect."}, :name macchiato.middleware.ssl/ssl-redirect-response, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/ssl.cljs", :end-column 28, :method-params ([request options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists (quote ([request options])), :doc "Given a HTTP request, return a redirect response to the equivalent HTTPS URL.\n  See: wrap-ssl-redirect."}, url {:name macchiato.middleware.ssl/url, :file "public/js/compiled/dev/macchiato/middleware/ssl.cljs", :line 8, :column 1, :end-line 8, :end-column 9, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/ssl.cljs", :line 8, :column 6, :end-line 8, :end-column 9}, :tag any}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:get :else :max-age :headers :head :scheme :request-method :https :include-subdomains? :ssl-port}, :order [:scheme :headers :request-method :head :get :ssl-port :https :else :max-age :include-subdomains?]}, :doc "Middleware for managing handlers operating over HTTPS."}