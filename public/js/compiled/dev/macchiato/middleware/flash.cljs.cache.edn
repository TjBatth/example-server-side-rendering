{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name macchiato.middleware.flash, :imports nil, :requires nil, :uses nil, :defs {flash-request {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/flash.cljs", :line 5, :column 7, :end-line 5, :end-column 20, :arglists (quote ([request])), :doc "Adds :flash key to request from :_flash in session."}, :name macchiato.middleware.flash/flash-request, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/flash.cljs", :end-column 20, :method-params ([request]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([request])), :doc "Adds :flash key to request from :_flash in session."}, flash-response {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/flash.cljs", :line 13, :column 7, :end-line 13, :end-column 21, :arglists (quote ([response request])), :doc "If response has a :flash key, saves it in :_flash of session for next\n  request."}, :name macchiato.middleware.flash/flash-response, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/flash.cljs", :end-column 21, :method-params ([response request]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([response request])), :doc "If response has a :flash key, saves it in :_flash of session for next\n  request."}, wrap-flash {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/flash.cljs", :line 33, :column 3, :end-line 33, :end-column 13, :macchiato/middleware {:id :wrap-flash, :required [:wrap-session]}, :arglists (quote ([handler])), :doc "If a :flash key is set on the response by the handler, a :flash key with\n  the same value will be set on the next request that shares the same session.\n  This is useful for small messages that persist across redirects."}, :macchiato/middleware {:id :wrap-flash, :required [:wrap-session]}, :name macchiato.middleware.flash/wrap-flash, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/flash.cljs", :end-column 13, :method-params ([handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([handler])), :doc "If a :flash key is set on the response by the handler, a :flash key with\n  the same value will be set on the next request that shares the same session.\n  This is useful for small messages that persist across redirects."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:_flash :flash :session}, :order [:session :_flash :flash]}, :doc "Middleware that adds session-based flash store that persists only to the\nnext request in the same session."}