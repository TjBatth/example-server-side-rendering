{:rename-macros {}, :renames {}, :externs {Error {}, decodeURI {}}, :use-macros {}, :excludes #{}, :name macchiato.middleware.resource, :imports nil, :requires {s cuerdas.core, cuerdas.core cuerdas.core, fs macchiato.fs, macchiato.fs macchiato.fs, path macchiato.fs.path, macchiato.fs.path macchiato.fs.path, resp macchiato.util.response, macchiato.util.response macchiato.util.response}, :uses nil, :defs {file-exists? {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/resource.cljs", :line 9, :column 8, :end-line 9, :end-column 20, :private true, :arglists (quote ([path]))}, :private true, :name macchiato.middleware.resource/file-exists?, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/resource.cljs", :end-column 20, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path]))}, remove-leading-slash {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/resource.cljs", :line 17, :column 8, :end-line 17, :end-column 28, :private true, :arglists (quote ([url]))}, :private true, :name macchiato.middleware.resource/remove-leading-slash, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/resource.cljs", :end-column 28, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url]))}, uri->path {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/resource.cljs", :line 21, :column 8, :end-line 21, :end-column 17, :private true, :arglists (quote ([root-path uri]))}, :private true, :name macchiato.middleware.resource/uri->path, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/resource.cljs", :end-column 17, :method-params ([root-path uri]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([root-path uri]))}, wrap-resource {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/resource.cljs", :line 34, :column 3, :end-line 34, :end-column 16, :macchiato/middleware {:id :wrap-resource}, :arglists (quote ([handler root-path])), :doc "Middleware that first checks to see whether the request map matches a static resource."}, :macchiato/middleware {:id :wrap-resource}, :name macchiato.middleware.resource/wrap-resource, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/resource.cljs", :end-column 16, :method-params ([handler root-path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([handler root-path])), :doc "Middleware that first checks to see whether the request map matches a static resource."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:get :else :head :uri :request-method}, :order [:else :uri :get :head :request-method]}, :doc "Middleware for serving static resources."}