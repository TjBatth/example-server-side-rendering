{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name macchiato.middleware.anti-forgery, :imports nil, :requires {c macchiato.crypto, macchiato.crypto macchiato.crypto}, :uses nil, :defs {wrap-anti-forgery {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :line 69, :column 3, :end-line 69, :end-column 20, :macchiato/middleware {:id :wrap-anti-forgery, :required [:wrap-session]}, :arglists (quote ([handler] [handler options])), :doc "Middleware that prevents CSRF attacks. Any POST request to the handler\n  returned by this function must contain a valid anti-forgery token, or else an\n  access-denied response is returned.\n\n  The anti-forgery token can be placed into a HTML page via the\n  *anti-forgery-token* var, which is bound to a random key unique to the\n  current session. By default, the token is expected to be in a form field\n  named '__anti-forgery-token', or in the 'X-CSRF-Token' or 'X-XSRF-Token'\n  headers.\n\n  Accepts the following options:\n\n  :read-token     - a function that takes a request and returns an anti-forgery\n                    token, or nil if the token does not exist\n\n  :error-response - the response to return if the anti-forgery token is\n                    incorrect or missing\n\n  :error-handler  - a handler function to call if the anti-forgery token is\n                    incorrect or missing.\n\n  Only one of :error-response, :error-handler may be specified.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([handler] [handler options]), :arglists ([handler] [handler options]), :arglists-meta (nil nil)}}, :macchiato/middleware {:id :wrap-anti-forgery, :required [:wrap-session]}, :name macchiato.middleware.anti-forgery/wrap-anti-forgery, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([handler] [handler options]), :arglists ([handler] [handler options]), :arglists-meta (nil nil)}, :method-params ([handler] [handler options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists ([handler] [handler options]), :doc "Middleware that prevents CSRF attacks. Any POST request to the handler\n  returned by this function must contain a valid anti-forgery token, or else an\n  access-denied response is returned.\n\n  The anti-forgery token can be placed into a HTML page via the\n  *anti-forgery-token* var, which is bound to a random key unique to the\n  current session. By default, the token is expected to be in a form field\n  named '__anti-forgery-token', or in the 'X-CSRF-Token' or 'X-XSRF-Token'\n  headers.\n\n  Accepts the following options:\n\n  :read-token     - a function that takes a request and returns an anti-forgery\n                    token, or nil if the token does not exist\n\n  :error-response - the response to return if the anti-forgery token is\n                    incorrect or missing\n\n  :error-handler  - a handler function to call if the anti-forgery token is\n                    incorrect or missing.\n\n  Only one of :error-response, :error-handler may be specified."}, get-request? {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :line 42, :column 8, :end-line 42, :end-column 20, :private true, :arglists (quote ([{method :request-method}]))}, :private true, :name macchiato.middleware.anti-forgery/get-request?, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :end-column 20, :method-params ([p__28800]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{method :request-method}]))}, new-token {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :line 8, :column 8, :end-line 8, :end-column 17, :private true, :arglists (quote ([]))}, :private true, :name macchiato.middleware.anti-forgery/new-token, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, *anti-forgery-token* {:name macchiato.middleware.anti-forgery/*anti-forgery-token*, :file "public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :line 4, :column 1, :end-line 6, :end-column 21, :doc "Binding that stores an anti-forgery token that must be included in POST forms if the handler is wrapped in wrap-anti-forgery.", :dynamic true, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :line 6, :column 1, :end-line 6, :end-column 21, :doc "Binding that stores an anti-forgery token that must be included in POST forms if the handler is wrapped in wrap-anti-forgery.", :dynamic true}}, default-request-token {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :line 30, :column 8, :end-line 30, :end-column 29, :private true, :arglists (quote ([request]))}, :private true, :name macchiato.middleware.anti-forgery/default-request-token, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :end-column 29, :method-params ([request]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([request]))}, session-token {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :line 11, :column 8, :end-line 11, :end-column 21, :private true, :arglists (quote ([request]))}, :private true, :name macchiato.middleware.anti-forgery/session-token, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :end-column 21, :method-params ([request]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([request]))}, make-error-handler {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :line 61, :column 8, :end-line 61, :end-column 26, :private true, :arglists (quote ([options]))}, :private true, :name macchiato.middleware.anti-forgery/make-error-handler, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :end-column 26, :method-params ([options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([options]))}, constant-handler {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :line 56, :column 8, :end-line 56, :end-column 24, :private true, :arglists (quote ([response]))}, :private true, :name macchiato.middleware.anti-forgery/constant-handler, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :end-column 24, :method-params ([response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([response]))}, valid-request? {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :line 47, :column 8, :end-line 47, :end-column 22, :private true, :arglists (quote ([request read-token]))}, :private true, :name macchiato.middleware.anti-forgery/valid-request?, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :end-column 22, :method-params ([request read-token]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([request read-token]))}, find-or-create-token {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :line 14, :column 8, :end-line 14, :end-column 28, :private true, :arglists (quote ([request]))}, :private true, :name macchiato.middleware.anti-forgery/find-or-create-token, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :end-column 28, :method-params ([request]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([request]))}, default-error-response {:name macchiato.middleware.anti-forgery/default-error-response, :file "public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :line 51, :column 1, :end-line 51, :end-column 38, :private true, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :line 51, :column 16, :end-line 51, :end-column 38, :private true}, :tag cljs.core/IMap}, form-params {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :line 26, :column 8, :end-line 26, :end-column 19, :private true, :arglists (quote ([request]))}, :private true, :name macchiato.middleware.anti-forgery/form-params, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :end-column 19, :method-params ([request]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([request]))}, valid-token? {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :line 35, :column 8, :end-line 35, :end-column 20, :private true, :arglists (quote ([request read-token]))}, :private true, :name macchiato.middleware.anti-forgery/valid-token?, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :end-column 20, :method-params ([request read-token]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([request read-token]))}, add-session-token {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :line 17, :column 8, :end-line 17, :end-column 25, :private true, :arglists (quote ([response request token]))}, :private true, :name macchiato.middleware.anti-forgery/add-session-token, :variadic false, :file "public/js/compiled/dev/macchiato/middleware/anti_forgery.cljs", :end-column 25, :method-params ([response request token]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 3, :fn-var true, :arglists (quote ([response request token]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:error-response :get :read-token :headers :error-handler :macchiato.middleware.anti-forgery/anti-forgery-token :head :form-params :status :options :body :multipart-params :request-method :session}, :order [:session :macchiato.middleware.anti-forgery/anti-forgery-token :form-params :multipart-params :headers :request-method :head :get :options :status :body :error-handler :error-response :read-token]}, :doc nil}