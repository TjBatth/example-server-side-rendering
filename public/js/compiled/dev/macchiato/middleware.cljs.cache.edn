{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {difference clojure.set}, :excludes #{}, :name macchiato.middleware, :imports nil, :requires {clojure.set clojure.set}, :uses {difference clojure.set}, :defs {update-middleware-meta {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware.cljs", :line 5, :column 8, :end-line 5, :end-column 30, :private true, :arglists (quote ([handler handler-middleware middleware-meta]))}, :private true, :name macchiato.middleware/update-middleware-meta, :variadic false, :file "public/js/compiled/dev/macchiato/middleware.cljs", :end-column 30, :method-params ([handler handler-middleware middleware-meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 3, :fn-var true, :arglists (quote ([handler handler-middleware middleware-meta]))}, validate {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware.cljs", :line 11, :column 7, :end-line 11, :end-column 15, :arglists (quote ([handler-middleware {:keys [id required], :as middleware-meta}])), :doc "middleware metadata can contain the following keys\n  :id - id of the middleware function\n  :required - a collection of the ids of middleware functions it requires to be present"}, :name macchiato.middleware/validate, :variadic false, :file "public/js/compiled/dev/macchiato/middleware.cljs", :end-column 15, :method-params ([handler-middleware p__30951]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists (quote ([handler-middleware {:keys [id required], :as middleware-meta}])), :doc "middleware metadata can contain the following keys\n  :id - id of the middleware function\n  :required - a collection of the ids of middleware functions it requires to be present"}, middleware-from-handler {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware.cljs", :line 21, :column 8, :end-line 21, :end-column 31, :private true, :arglists (quote ([handler]))}, :private true, :name macchiato.middleware/middleware-from-handler, :variadic false, :file "public/js/compiled/dev/macchiato/middleware.cljs", :end-column 31, :method-params ([handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([handler]))}, validate-handler {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware.cljs", :line 24, :column 7, :end-line 24, :end-column 23, :arglists (quote ([handler]))}, :name macchiato.middleware/validate-handler, :variadic false, :file "public/js/compiled/dev/macchiato/middleware.cljs", :end-column 23, :method-params ([handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([handler]))}, loaded? {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware.cljs", :line 32, :column 8, :end-line 32, :end-column 15, :private true, :arglists (quote ([middleware {:keys [id]}]))}, :private true, :name macchiato.middleware/loaded?, :variadic false, :file "public/js/compiled/dev/macchiato/middleware.cljs", :end-column 15, :method-params ([middleware p__30991]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([middleware {:keys [id]}]))}, wrap {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware.cljs", :line 35, :column 7, :end-line 35, :end-column 11, :arglists (quote ([handler middleware-fn] [handler middleware-fn opts])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([handler middleware-fn] [handler middleware-fn opts]), :arglists ([handler middleware-fn] [handler middleware-fn opts]), :arglists-meta (nil nil)}}, :name macchiato.middleware/wrap, :variadic false, :file "public/js/compiled/dev/macchiato/middleware.cljs", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([handler middleware-fn] [handler middleware-fn opts]), :arglists ([handler middleware-fn] [handler middleware-fn opts]), :arglists-meta (nil nil)}, :method-params ([handler middleware-fn] [handler middleware-fn opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 3, :fn-var true, :arglists ([handler middleware-fn] [handler middleware-fn opts])}, middleware-id {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware.cljs", :line 52, :column 8, :end-line 52, :end-column 21, :private true, :arglists (quote ([middleware]))}, :private true, :name macchiato.middleware/middleware-id, :variadic false, :file "public/js/compiled/dev/macchiato/middleware.cljs", :end-column 21, :method-params ([middleware]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([middleware]))}, check-conflicting-middleware {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware.cljs", :line 55, :column 8, :end-line 55, :end-column 36, :private true, :arglists (quote ([handler-middleware middleware]))}, :private true, :name macchiato.middleware/check-conflicting-middleware, :variadic false, :file "public/js/compiled/dev/macchiato/middleware.cljs", :end-column 36, :method-params ([handler-middleware middleware]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 2, :fn-var true, :arglists (quote ([handler-middleware middleware]))}, wrap-middleware {:protocol-inline nil, :meta {:file "/Users/retro/Projects/keechma-ssr/public/js/compiled/dev/macchiato/middleware.cljs", :line 65, :column 7, :end-line 65, :end-column 22, :arglists (quote ([handler & middleware])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(handler middleware)], :arglists ([handler & middleware]), :arglists-meta (nil)}}, :name macchiato.middleware/wrap-middleware, :variadic true, :file "public/js/compiled/dev/macchiato/middleware.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(handler middleware)], :arglists ([handler & middleware]), :arglists-meta (nil)}, :method-params [(handler middleware)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists ([handler & middleware])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:macchiato/middleware :name :id :required}, :order [:macchiato/middleware :id :required :name]}, :doc nil}